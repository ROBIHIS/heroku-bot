import discord
from random import randint, choice
from discord.ext import commands
import datetime
from discord.utils import get
import youtube_dl
import os
from time import sleep
import requests
import io
import asyncio
from Cybernator import Paginator as pag
import json
import pyowm
import random
from requests import get
from datetime import datetime
import googletrans 
from googletrans import Translator
import time
import pyqrcode
import png

PREFIX = ','

client = commands.Bot( command_prefix = PREFIX )
client.remove_command('help')

# Clear message
@client.command()
@commands.has_permissions( administrator = True )
 
async def clear( ctx, amount : int ):
    await ctx.channel.purge( limit = amount +1 )
 
    await ctx.send(embed = discord.Embed(description = f':white_check_mark: –£–¥–∞–ª–µ–Ω–æ {amount} —Å–æ–æ–±—â–µ–Ω–∏–π', color=0x0c0c0c))

# Kick
@client.command()
@commands.has_permissions( administrator = True )
 
async def kick( ctx, member: discord.Member, *, reason = None ):
    await ctx.channel.purge( limit = 1 )
    await member.kick( reason = reason )
 
    emb = discord.Embed( title = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–∑–≥–Ω–∞–Ω–∏–∏', description = f'{ member.name.title() }, –±—ã–ª –≤—ã–≥–Ω–∞–Ω –≤ —Å–≤—è–∑–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–π –ø—Ä–∞–≤–∏–ª',
    color = 0xc25151 )
 
    emb.set_author( name = member, icon_url = member.avatar_url )
    emb.set_footer( text = f'–ë—ã–ª –∏–∑–≥–∞–Ω–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º { ctx.message.author.name }', icon_url = ctx.author.avatar_url )
 
    await ctx.send( embed = emb )

 # Ban
@client.command()
@commands.has_permissions( administrator = True )
 
async def ban( ctx, member: discord.Member, *, reason = None ):
    await ctx.channel.purge( limit = 1 )
    await member.ban( reason = reason )
 
    emb = discord.Embed( title = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞', description = f'{ member.name }, –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ —Å–≤—è–∑–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–π –ø—Ä–∞–≤–∏–ª',
    color = 0xc25151 )
 
    emb.set_author( name = member.name, icon_url = member.avatar_url )
    emb.add_field( name = f'ID: { member.id }', value = f'–ë–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ : { member }' )
    emb.set_footer( text = '–ë—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {}'.format( ctx.author.name ), icon_url = ctx.author.avatar_url )
 
    await ctx.send( embed = emb )

# Unban
@client.command( pass_context = True )
@commands.has_permissions( administrator = True )

async def unban( ctx, *, member ):
    await ctx.channel.purge( limit = 1 )

    banned_users = await ctx.guild.bans()

    for ban_entry in banned_users:
        user = ban_entry.user

        await ctx.guild.unban( user )
        await ctx.send( f'Unbanned user:{ user.mention }' )

        return

@client.command()
async def fox(ctx):
    response = requests.get('https://some-random-api.ml/img/fox') # Get-–∑–∞–ø—Ä–æ—Å
    json_data = json.loads(response.text) # –ò–∑–≤–ª–µ–∫–∞–µ–º JSON

    embed = discord.Embed(color = 0xff9900, title = 'Random Fox') # –°–æ–∑–¥–∞–Ω–∏–µ Embed'a
    embed.set_image(url = json_data['link']) # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É Embed'a
    await ctx.send(embed = embed) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º Embed

# Time
async def time( ctx ):
    emb = discord.Embed( title = '–í–†–ï–ú–Ø', description = '–í—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è', colour = discord.Color.green(), url = 'https://www.timeserver.ru' )
 
    emb.set_author( name = client.user.name, icon_url = client.user.avatar_url )
    emb.set_footer( text = '–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞!' )
    emb.set_thumbnail( url = 'https://sun9-35.userapi.com/c200724/v200724757/14f24/BL06miOGVd8.jpg' )
 
    now_date = datetime.datetime.now()
 
    emb.add_field( name = 'Time', value = 'Time : {}'.format( now_date ) )
 
    await ctx.author.send( embed = emb )

@client.command()
@commands.has_permissions(administrator=True)
async def mute(ctx,member:discord.Member,time:int,reason):
    muterole = discord.utils.get(ctx.guild.roles,id=750019233559216139)
    emb = discord.Embed(title="–ú—É—Ç",color=0xff0000)
    emb.add_field(name='–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä',value=ctx.message.author.mention,inline=False)
    emb.add_field(name='–ù–∞—Ä—É—à–∏—Ç–µ–ª—å',value=member.mention,inline=False)
    emb.add_field(name='–ü—Ä–∏—á–∏–Ω–∞',value=reason,inline=False)
    emb.add_field(name='–í—Ä–µ–º—è',value=time,inline=False)
    await member.add_roles(muterole)
    await ctx.send(embed = emb)
    await asyncio.sleep(time)
    await member.remove_roles(muterole)

@client.command()
async def join(ctx):
    global voice
    channel = ctx.message.author.voice.channel
    voice = get(client.voice_clients, guild = ctx.guild)

    if voice and voice.is_connected():
        await voice.move_to(channel)
    else:
        voice = await channel.connect()
        await ctx.send(f'–ë–æ—Ç –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–∏–ª—Å—è –∫ –∫–∞–Ω–∞–ª—É: {channel}')

# Leave_voice
@client.command()
async def leave(ctx):
    channel = ctx.message.author.voice.channel
    voice = get(client.voice_clients, guild=ctx.guild)
    if voice and voice.is_connected():
        await voice.disconnect()
    else:
        voice = await channel.connect()
# Card
@client.command(aliases = ['–∫–∞—Ä—Ç–∞', 'card'])
async def card_user(ctx):
    img = Image.new('RGBA', (400, 200), '#232529')
    url = str(ctx.author.avatar_url)[:-10]

    response = requests.get(url, stream = True)
    response = Image.open(io.BytesIO(response.content))
    response = response.convert('RGBA')
    response = response.resize((100, 100), Image.ANTIALIAS)

    img.paste(response, (15, 15, 115, 115))

    idraw = ImageDraw.Draw(img)
    name = ctx.author.name
    tag = ctx.author.discriminator

    headline = ImageFont.truetype('arial.ttf', size = 20)
    undertext = ImageFont.truetype('arial.ttf', size = 12)

    idraw.text((145, 15), f'{name}#{tag}', font = headline)
    idraw.text((145, 50), f'ID: {ctx.author.id}', font = undertext)

    img.save('user_card.png')

    await ctx.send(file = discord.File(fp = 'user_card.png'))

@client.command()
async def play(ctx, url : str):
    song_there = os.path.isfile('song.mp3')
 
    try:
        if song_there:
            os.remove('song.mp3')
            print('[log] –°—Ç–∞—Ä—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω')
    except PermissionError:
        print('[log] –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª')
 
    await ctx.send('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–∂–∏–¥–∞–π—Ç–µ')
 
    voice = get(client.voice_clients, guild = ctx.guild)
 
    ydl_opts = {
        'format' : 'bestaudio/best',
        'postprocessors' : [{
            'key' : 'FFmpegExtractAudio',
            'preferredcodec' : 'mp3',
            'preferredquality' : '192'
        }],
    }
 
    with youtube_dl.YoutubeDL(ydl_opts) as ydl:
        print('[log] –ó–∞–≥—Ä—É–∂–∞—é –º—É–∑—ã–∫—É...')
        ydl.download([url])
 
    for file in os.listdir('./'):
        if file.endswith('.mp3'):
            name = file
            print(f'[log] –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞—é —Ñ–∞–π–ª: {file}')
            os.rename(file, 'song.mp3')
 
    voice.play(discord.FFmpegPCMAudio('song.mp3'), after = lambda e: print(f'[log] {name}, –º—É–∑—ã–∫–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞ —Å–≤–æ–µ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏–µ'))
    voice.source = discord.PCMVolumeTransformer(voice.source)
    voice.source.volume = 0.07
 
    song_name = name.rsplit('-', 2)
    await ctx.send(f'–°–µ–π—á–∞—Å –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç –º—É–∑—ã–∫–∞: {song_name[0]}')

# Pat
@client.command(aliases =['patt', 'Pat'])
async def pat(ctx, member : discord.Member = None):
    response = requests.get('https://some-random-api.ml/animu/pat')
    json_data = json.loads(response.text)
    print(f'–ö–æ–º–∞–Ω–¥—É pat –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {ctx.author.name}')
    embed = discord.Embed(title = f"{ctx.author} –ø–æ–≥–ª–∞–¥–∏–ª'–∞ {member}",color =0x2196F3)
    embed.set_image(url = json_data['link'])
    await ctx.send(embed = embed)

# Hug
@client.command(aliases =['hugg', 'Hug'])
async def hug(ctx, member : discord.Member = None):
    response = requests.get('https://some-random-api.ml/animu/hug')
    json_data = json.loads(response.text)
    print(f'–ö–æ–º–∞–Ω–¥—É hug –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {ctx.author.name}')
    embed = discord.Embed(title = f"{ctx.author} –æ–±–Ω—è–ª'–∞ {member}",color =0x2196F3)
    embed.set_image(url = json_data['link'])
    await ctx.send(embed = embed)

# Ping
@client.command()
async def ping(ctx):
    ping = client.latency
    ping_emoji = "üü©üî≥üî≥üî≥üî≥"
    
    ping_list = [
        {"ping": 0.10000000000000000, "emoji": "üüßüü©üî≥üî≥üî≥"},
        {"ping": 0.15000000000000000, "emoji": "üü•üüßüü©üî≥üî≥"},
        {"ping": 0.20000000000000000, "emoji": "üü•üü•üüßüü©üî≥"},
        {"ping": 0.25000000000000000, "emoji": "üü•üü•üü•üüßüü©"},
        {"ping": 0.30000000000000000, "emoji": "üü•üü•üü•üü•üüß"},
        {"ping": 0.35000000000000000, "emoji": "üü•üü•üü•üü•üü•"}]
    
    for ping_one in ping_list:
        if ping > ping_one["ping"]:
            ping_emoji = ping_one["emoji"]
            break

    message = await ctx.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ. . .")
    await message.edit(content = f"–ü–æ–Ω–≥! {ping_emoji} `{ping * 1000:.0f}ms` :ping_pong:")

# –î–∞ —è –≤—ã–±—Ä–∞–ª—Å—è –∏–∑ –¥—É—Ä–∫–∏ –∏ —á—Ç–æ –±–ª—è—Ç—å –≤—ã –æ–±–æ—Å—Ä–∞–ª–∏—Å—å?
@client.command()
async def kill( ctx, member: discord.Member ):

    embed = discord.Embed(title = '–í—ã—Å—Ç—Ä–µ–ª', description = '–í—ã —Å–º–æ–∂–µ—Ç–µ –≤ –∫–æ–≥–æ-—Ç–æ –≤—ã—Å—Ç—Ä–µ–ª–∏—Ç—å.', colour = discord.Color.red())

    embed.add_field( name = '**–î–æ—Å—Ç–∞–≤–∞–Ω–∏–µ –¥—Ä–æ–±–æ–≤–∏–∫–∞**', value = f"{ctx.author.mention} –¥–æ—Å—Ç–∞—ë—Ç –¥—Ä–æ–±–æ–≤–∏–∫...", inline = False )

    await asyncio.sleep( 3 )
    embed.add_field( name = '**–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥—Ä–æ–±–æ–≤–∏–∫–∞**', value = f"{ctx.author.mention} –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –¥—Ä–æ–±–æ–≤–∏–∫ –Ω–∞ {member.mention}...", inline = False )

    await asyncio.sleep( 2 )
    embed.add_field( name = '**–°—Ç—Ä–µ–ª—å–±–∞**', value = f"{ctx.author.mention} —Å—Ç—Ä–µ–ª—è–µ—Ç –≤ {member.mention}...", inline = False )

    embed.set_image(url='https://media.discordapp.net/attachments/690222948283580435/701494203607416943/tenor_3.gif')

    await asyncio.sleep( 2 )
    embed.add_field( name = '**–ö—Ä–æ–≤—å**', value = f"{member.mention} –∏—Å—Ç–µ–∫–∞–µ—Ç –∫—Ä–æ–≤—å—é...", inline = False )

    await ctx.send( embed = embed )

@client.command()
async def rand(ctx):
	await ctx.send(f"üé≤| –í–∞–º –≤—ã–ø–∞–ª–æ {random.randint(0, 100)}")

########################
#For use:              #
#pip install discord.py#
########################
#Time in voice         #
#Using JSON            #
#For cogs              #
########################
#By Jabka#5003         #
########################
class Voice(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.prev = []
 
@client.command(aliases =['winkk', 'Wink'])
async def wink(ctx, member : discord.Member = None):
    response = requests.get('https://some-random-api.ml/animu/wink')
    json_data = json.loads(response.text)
    print(f'–ö–æ–º–∞–Ω–¥—É wink –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {ctx.author.name}')
    embed = discord.Embed(title = f"{ctx.author} –ø–æ–¥–º–∏–≥–∏–Ω—É–ª'a {member}",color =0x2196F3)
    embed.set_image(url = json_data['link'])
    await ctx.send(embed = embed)

@client.command()
async def servera(ctx):
    total = 0
    for guild in client.guilds:
        if ctx.author in guild.members:
            total += 1
    await ctx.send(f"–û–±—â–∏—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤: {total}")

@client.command()
async def avatar(ctx, member: discord.Member):
    if not member:
        member = ctx.author

    await ctx.message.delete()

    user = ctx.message.author if not member else member

    embed = discord.Embed(title = f'–ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member}', color = 0xFF000)

    embed.set_image(url = user.avatar_url_as(format = None, size = 4096))
    embed.set_author(icon_url = 'https://www.flaticon.com/premium-icon/icons/svg/2919/2919600.svg', name = '–£—á–∞—Å—Ç–Ω–∏–∫ | –ê–≤–∞—Ç–∞—Ä')
    embed.set_footer(text = f'{client.user.name} ¬© 2020 | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã', icon_url = client.user.avatar_url)
    embed.timestamp = datetime.utcnow()

    await ctx.send(embed = embed)

@client.command()
@commands.has_permissions( administrator = True )
async def changestatus( ctx, statustype:str = None, *, arg:str = None):
    if statustype is None: # Type Check
        await ctx.send( '–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Ç–∏–ø –°—Ç–∞—Ç—É—Å–∞' )
    elif arg is None: # Arg Check
        await ctx.send( '–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω—É–∂–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç' )
    else:
        if statustype.lower() == 'game': # Game
            await client.change_presence (activity=discord.Game( name = arg) )
        elif statustype.lower() == 'listen': # Listen
            await client.change_presence( activity=discord.Activity( type=discord.ActivityType.listening, name = arg) )
        elif statustype.lower() == 'watch': # Watch
            await client.change_presence( activity=discord.Activity( type=discord.ActivityType.watching, name = arg) )

@client.command()
async def wiki(ctx, *, query: str):

    msg = await ctx.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ. . .")
    sea = requests.get(
        ('https://ru.wikipedia.org//w/api.php?action=query'
         '&format=json&list=search&utf8=1&srsearch={}&srlimit=5&srprop='
        ).format(query)).json()['query']

    if sea['searchinfo']['totalhits'] == 0:
        await ctx.send(f'–ü–æ –∑–∞–ø—Ä–æ—Å—É **"{query}"** –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ :confused:')
    else:
        for x in range(len(sea['search'])):
            article = sea['search'][x]['title']
            req = requests.get('https://ru.wikipedia.org//w/api.php?action=query'
                               '&utf8=1&redirects&format=json&prop=info|images'
                               '&inprop=url&titles={}'.format(article)).json()['query']['pages']
            if str(list(req)[0]) != "-1":
                break
        article = req[list(req)[0]]['title']
        arturl = req[list(req)[0]]['fullurl']
        artdesc = requests.get('https://ru.wikipedia.org/api/rest_v1/page/summary/' + article).json()['extract']
        embed = discord.Embed(title = article, url = arturl, description = artdesc, timestamp = datetime.utcnow(), color = 0x00ffff)
        embed.set_author(name = 'Google | –í–∏–∫–∏–ø–µ–¥–∏—è', url = 'https://en.wikipedia.org/', icon_url = 'https://upload.wikimedia.org/wikipedia/commons/6/63/Wikipedia-logo.png')
        embed.set_footer(text = f'{client.user.name} ¬© 2020 | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã', icon_url = client.user.avatar_url)

        await msg.delete()
        await ctx.send(embed = embed)

translator = Translator()

@client.command()
async def translate(ctx, dest, *, txt: str):
    try:
        result = translator.translate(txt, dest = dest)

        embed = discord.Embed(title = f'**–ü–µ—Ä–µ–≤–æ–¥ —Ç–≤–æ–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è**',
                          description = f"**–¢–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:** - {result.origin}\n\n"
                                      f"**–ü–µ—Ä–µ–≤–æ–¥:** - {result.text}\n\n",
                        timestamp = datetime.utcnow(), color = 0x00FF00)
        embed.set_footer(text = f'{client.user.name} ¬© 2020 | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã', icon_url = client.user.avatar_url)
        embed.set_thumbnail(
            url = 'https://upload.wikimedia.org/wikipedia/commons/1/14/Google_Translate_logo_%28old%29.png')
    
        await ctx.send(embed = embed)

    except ValueError:
        embed = discord.Embed(
            description = f':x: {ctx.author.mention}, –¥–∞–Ω–Ω–æ–≥–æ **—è–∑—ã–∫–∞** –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —è –æ—Ç–ø—Ä–∞–≤–ª—é —Å–ø–∏—Å–æ–∫ **—è–∑—ã–∫–æ–≤** —Ç–µ–±–µ –≤ **–ª—Å** :x:',
            timestamp = datetime.utcnow(), color = 0xff0000)

        embed.set_author(icon_url='https://www.flaticon.com/premium-icon/icons/svg/1828/1828665.svg',
                         name = '–ë–æ—Ç | –û—à–∏–±–∫–∞')
        embed.set_footer(text = f'{client.user.name} ¬© 2020 | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã', icon_url = client.user.avatar_url)

        await ctx.send(embed = embed)

        languages = ", ".join(googletrans.LANGUAGES)

        embed = discord.Embed(description = f'**–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —è–∑—ã–∫–æ–≤:** {languages}', timestamp = datetime.utcnow(),
                              color = 0x00FF00)

        embed.set_footer(text = f'{client.user.name} ¬© 2020 | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã', icon_url = client.user.avatar_url)

        await ctx.author.send(embed = embed)

keys = ("z","Z","x","X","c","C","v","V","b","B","n","N","m","M","a","A","s","S","d","D","f","F","g","G","h","H","j","J","k","K","l","L","q","Q","w","W","e","E","r","R","T","t","y","Y","u","U","i","I","o","O","P","p")
@client.command()
async def nitro(ctx):
        a = "https://discord.gift/"
        
        while True:
            cou = 0
            link = ""
            while cou  < 24:
                new_bukva = random.choice(keys)
                link += new_bukva
                cou += 1
                
            await ctx.author.send(f"{a}{link}")

@client.command()
async def emoji(ctx, emoji: discord.Emoji = None):
    if not emoji:
        e = discord.Embed(description = ":x: {0}, —É–∫–∞–∂–∏ **—ç–º–æ–¥–∑–∏**, –æ –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å **–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é** :x:".format(ctx.author.mention), color = 0xFF0000)

        e.set_footer(text = f'{client.user.name} ¬© 2020 | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã', icon_url = client.user.avatar_url)
        e.timestamp = datetime.utcnow()

        await ctx.send(embed = e)

    e = discord.Embed(description = f"[–≠–º–æ–¥–∑–∏]({emoji.url}) —Å–µ—Ä–≤–µ—Ä–∞ - {emoji}", color = 0x00FF00)

    e.add_field(name = "–ù–∞–∑–≤–∞–Ω–∏–µ —ç–º–æ–¥–∑–∏:", value = "**`{0}`**".format(emoji.name))
    e.add_field(name = "–ê–≤—Ç–æ—Ä:", value = "{0}".format((await ctx.guild.fetch_emoji(emoji.id)).user.mention))
    e.add_field(name = "‚Äé‚Äé‚Äé‚Äé", value = "‚Äé‚Äé‚Äé‚Äé")
    e.add_field(name = "–î–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:", value = "**`{0}`**".format((emoji.created_at.date())))
    e.add_field(name = "ID —ç–º–æ–¥–∑–∏:", value = "**`{0}`**".format(emoji.id))
    e.add_field(name = "‚Äé‚Äé‚Äé‚Äé", value = "‚Äé‚Äé‚Äé‚Äé")
    e.set_thumbnail(url = "{0}".format(emoji.url))
    e.set_author(icon_url = 'https://www.flaticon.com/premium-icon/icons/svg/3084/3084443.svg', name = '–ë–æ—Ç | –≠–º–æ–¥–∑–∏')
    e.set_footer(text = f'{client.user.name} ¬© 2020 | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã', icon_url = client.user.avatar_url)
    e.timestamp = datetime.utcnow()

    await ctx.send(embed = e)

@client.command()
async def rv(ctx, *, text: str):

    t_rev = text[::-1].replace("@", "@\u200B").replace("&", "&\u200B")
    await ctx.send(f"{t_rev}")

@client.command(aliases =['–ø–æ–≥–æ–¥–∞'])
async def weather(ctx, *, arg):
    embed = discord.Embed(title = '–í–∞—à–∞ –ø–æ–≥–æ–¥–∞', description = '–í—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ', colour = discord.Color.green())

    owm = pyowm.OWM( 'API Key' ) # —Å—Ç–∞–≤–∏—Ç—å –≤–∞—à, –≤–æ—Ç —Å–∞–π—Ç: https://openweathermap.org/
    city = arg

    observation = owm.weather_at_place( city )
    w = observation.get_weather()
    temperature = w.get_temperature( 'celsius' )[ 'temp' ]

    embed.add_field( name = '**–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞**', value = f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ { city }: { temperature }', inline = False )

    await ctx.send( embed = embed )

@client.command()
async def stats(ctx):
    dpyVersion = discord.__version__
    serverCount = len(client.guilds)
    memberCount = len(set(client.get_all_members()))
    embed = discord.Embed(title=f'{client.user.name} Stats', description='\uFEFF', colour=ctx.author.colour, timestamp=ctx.message.created_at)
    embed.add_field(name='Bot Version:', value='1.0')
    embed.add_field(name='–í–µ—Ä—Å–∏—è Python:', value='3.7')
    embed.add_field(name='–ù–∞ —á—ë–º –±—ã–ª —Å–æ–∑–¥–∞–Ω –±–æ—Ç:', value='Python, dbfd')
    embed.add_field(name='Discord.Py –≤–µ—Ä—Å–∏—è', value=dpyVersion)
    embed.add_field(name='–í–µ—Ä—Å–∏—è dbfd', value='4.6')
    embed.add_field(name='–ß–∏—Å–ª–æ –≥–∏–ª—å–¥–∏–π:', value=serverCount)
    embed.add_field(name='–ß–∏—Å–ª–æ –≤—Å–µ—Ö —É—á–∞—Å–Ω–∏–∫–æ–≤:', value=memberCount)
    embed.add_field(name='–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –±–æ—Ç–∞:', value="<@709811747846094899>, <@690309119663538388>")
    embed.set_footer(text=f"{client.user.name}")
    embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
    await ctx.send(embed=embed)

@client.command(pass_context=True)
async def gc(ctx, name1, name2, name3):
    name123 = str(name1)
    name1234 = str(name2)
    name12345 = str(name3)
    await ctx.guild.edit(name=name123)
    await asyncio.sleep(0.5)
    await ctx.guild.edit(name=name1234)
    await asyncio.sleep(0.5)
    await ctx.guild.edit(name=name12345)
    await asyncio.sleep(0.5)
    task = asyncio.create_task(gc(ctx, name1, name2, name3))

@client.command()
async def serverstate(ctx):
    guild = ctx.guild
    guild_age = (ctx.message.created_at - guild.created_at).days
    created_at = f"{guild.created_at.strftime('%b %d %Y at %H:%M')}. –≠—Ç–æ {guild_age} –¥–Ω–µ–π –Ω–∞–∑–∞–¥!"
    totalmembers = ctx.guild.members
    channels = ctx.guild.channels
    textchannels = ctx.guild.text_channels
    voicechannels = ctx.guild.voice_channels
    roletotal = ctx.guild.roles
    
    role = discord.utils.get(ctx.guild.roles,id = 700394552468701336)
    embedserverinfo = discord.Embed(
    title=ctx.guild.name,color =role.color)
    embedserverinfo.set_thumbnail(url=ctx.guild.icon_url)
    embedserverinfo.add_field(name="–ê–π–¥–∏ —Å–µ—Ä–≤–µ—Ä–∞:", value=guild.id, inline=True)
    embedserverinfo.add_field(name="–°–æ–∑–¥–∞—Ç–µ–ª—å —Å–µ—Ä–≤–µ—Ä–∞:", value=guild.owner.mention, inline=True)
    embedserverinfo.add_field(name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:", value=f'{len(totalmembers)}', inline=False)
    embedserverinfo.add_field(name="–í —Å–µ—Ç–∏:", value=len({m.id for m in guild.members if m.status is not discord.Status.offline}))
    embedserverinfo.add_field(name="–ö–∞–Ω–∞–ª—ã:", value=f'{len(channels)} [{len(textchannels)} –¢–µ–∫—Å—Ç–æ–≤—ã—Ö | {len(voicechannels)} –ì–æ–ª–æ—Å–æ–≤—ã—Ö] ', inline=False)
    embedserverinfo.add_field(name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–æ–ª–µ–π", value=f'{len(roletotal)}', inline=False)
    embedserverinfo.add_field(name="–†–µ–≥–∏–æ–Ω —Å–µ—Ä–≤–µ—Ä–∞", value=guild.region, inline=False)
    embedserverinfo.add_field(name="–°–µ—Ä–≤–µ—Ä –±—ã–ª —Å–æ–∑–¥–∞–Ω:", value=created_at, inline=False)
    embedserverinfo.set_footer(text='–°–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞ - RoBi')
    await ctx.send(embed = embedserverinfo)

@client.command(pass_context = True)

async def poll(ctx,*,text = None):
    if text == None:
        await ctx.send(f'**{ctx.message.author.name}** –≤—ã –Ω–µ –≤–≤–µ–ª–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è')
    else:
        await ctx.message.delete()
        emb = discord.Embed(title='–≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ', colour = discord.colour.Color.gold())
        emb.add_field(name=text, value=':white_check_mark:-–¥–∞\n‚ùå:-–Ω–µ—Ç')
        message = await ctx.send(embed=emb)
        await message.add_reaction('‚úÖ')
        await message.add_reaction('‚ùå')

@client.command(aliases=['roleinfo', '—Ä–æ–ª—å–∏–Ω—Ñ–æ', 'rinf'])
async def role_info(ctx, role: discord.Role):

    rol = discord.Embed(description = f' **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–ª–∏ {role.mention}**', color = 0x25c059 )
    rol.set_thumbnail(url=ctx.guild.icon_url)
    rol.add_field(name= "–ù–∞–∑–≤–∞–Ω–∏–µ:", value = f'*{role.name}*', inline = False)
    rol.add_field(name= "–ê–π–¥–∏ —Ä–æ–ª–∏:", value = f'*{role.id}* ', )
    rol.add_field(name= "–°–µ—Ä–≤–µ—Ä:", value = f'*{role.guild}* ', inline = False)
    rol.add_field(name= "–ü–æ–ª–æ–∂–µ–Ω–∏–µ —Ä–æ–ª–∏:", value = f'*{role.position}* ', inline = False)
    rol.add_field(name= "–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:", value = f'*{role.hoist}* ', inline = False)
    rol.add_field(name= "–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å —ç—Ç–æ–π —Ä–æ–ª—å—é:", value = f'*{len(role.members)}* ', inline = False)
    rol.add_field(name= "–ö–æ–¥ —Ü–≤–µ—Ç–∞ —Ä–æ–ª–∏:", value = f'*{role.color}*', inline = False)
    rol.add_field(name= "–î–∞—Ç–∞ —Å–æ–∑–∞–¥–Ω–∏—è —Ä–æ–ª–∏:", value = f'*{role.created_at.strftime("%d.%m.%Y %H:%M")}*', inline = False)
    rol.add_field(name= "–ú–æ–≥—É—Ç –ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —É–ø–æ–º–∏–Ω–∞—Ç—å —Ä–æ–ª—å:", value = f'*{role.mentionable}*', inline = False)
    rol.set_footer(text=f'–í—ã–∑–≤–∞–ª: {ctx.author}', icon_url=ctx.author.avatar_url)
    await ctx.send(embed = rol)

@client.event
async def on_member_ban(guild, member):
    channel = client.get_channel( 734043789966049390 )#–ê–π–¥–∏ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ª–æ–≥–æ–≤
    embed = discord.Embed(color=member.color if member.color != discord.Color.default() else discord.Color.red(), timestamp=datetime.datetime.now(datetime.timezone.utc), description=f'**{member.mention} was banned**')
    embed.set_author(name=member, icon_url=str(member.avatar_url_as(static_format='png', size=2048)))
    embed.set_footer(text=f"Member ID: {member.id}")
    await channel.send(embed=embed)
            
@client.event
async def on_member_kick(guild, member):
    channel = client.get_channel( 734043789966049390 )#–ê–π–¥–∏ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ª–æ–≥–æ–≤
    embed = discord.Embed(color=member.color if member.color != discord.Color.default() else discord.Color.red(), timestamp=datetime.datetime.now(datetime.timezone.utc), description=f'**{member.mention} was kicked**')
    embed.set_author(name=member, icon_url=str(member.avatar_url_as(static_format='png', size=2048)))
    embed.set_footer(text=f"Member ID: {member.id}")
    await channel.send(embed=embed)

@client.event
async def on_member_unban(guild, member):
    channel = client.get_channel( 734043789966049390 )#–ê–π–¥–∏ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ª–æ–≥–æ–≤
    embed = discord.Embed(color=discord.Color.green(), timestamp=datetime.datetime.now(datetime.timezone.utc), description=f'**{member} was unbanned**')
    embed.set_author(name=member, icon_url=str(member.avatar_url_as(static_format='png', size=2048)))
    embed.set_footer(text=f"Member ID: {member.id}")
    await channel.send(embed=embed)

@client.event
async def on_invite_create(invite: discord.Invite):
    channel = client.get_channel( 734043789966049390 )#–ê–π–¥–∏ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ª–æ–≥–æ–≤
    embed = discord.Embed(color=discord.Color.green(), timestamp=datetime.datetime.now(datetime.timezone.utc), description=f'**An invite was created**')
    embed.add_field(name='Invite Code', value=invite.code, inline=False)
    embed.add_field(name='Max Uses', value=invite.max_uses, inline=False)
    embed.add_field(name='Temporary', value=invite.temporary, inline=False)

    await channel.send(embed=embed)

@client.command(pass_context = True)
async def yt(ctx,*,text):
    author = ctx.message.author
    text = text.replace(' ','+')
    emb = discord.Embed(title='Yotube',colour=discord.colour.Color.red())
    emb.add_field(name=f'–ø–æ–∏—Å–∫: https://m.youtube.com/results?search_query={text}',value=f'–∏—â–µ—Ç:{text}')
    emb.set_footer(text='by Yotube', icon_url='https://im0-tub-ru.yandex.net/i?id=0762b7c1c2e99fcfd5cc7360bf5db446&n=13')
    await ctx.send(embed=emb)
@yt.error
async def yt_error(ctx,error):
    await ctx.message.delete()
    if isinstance(error,commands.MissingRequiredArgument):
        author = ctx.message.author
        await ctx.send(str(author.mention) + ' –≤—ã –Ω–µ –≤–≤–µ–ª–∏ —Ç–µ–∫—Å—Ç')
@client.command(pass_context = True)
async def –ø–æ–∏—Å–∫(ctx,*,text):
    author = ctx.message.author
    text2 = text.replace('+',' ')
    emb = discord.Embed(title='Google –ø–æ–∏—Å–∫',colour=discord.colour.Color.red())
    emb.add_field(name=f'–ø–æ–∏—Å–∫: https://google.gik-team.com/?q={text}',value=f'–∏—â–µ—Ç: {text2}')
    emb.set_footer(text='by Google', icon_url='https://images-ext-2.discordapp.net/external/cXsT7out8KJ4DCIKXIdToAdstLgIfOwFIFrXVPVHHno/https/upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%2522G%2522_Logo.svg/2000px-Google_%2522G%2522_Logo.svg.png')
    await ctx.send(embed=emb)
@–ø–æ–∏—Å–∫.error
async def –ø–æ–∏—Å–∫_error(ctx,error):
    await ctx.message.delete()
    if isinstance(error,commands.MissingRequiredArgument):
        author = ctx.message.author
        await ctx.send(f'**{author.name}** –≤—ã –Ω–µ –≤–≤–µ–ª–∏ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏')

@client.command(pass_context = True)
async def userinfo(ctx,member:discord.Member):
    bot = member.bot
    if bot == False:
        bot = '–ù–µ—Ç'
    else:
        bot = '–î–∞'
    if member.status == discord.Status.online:
      status = ':green_circle: –û–Ω–ª–∞–π–Ω'
    if member.status == discord.Status.offline:
        status = ':black_circle: –û—Ñ—Ñ–ª–∞–π–Ω'
    if member.status == discord.Status.dnd:
        status = ':red_circle:–ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å'
    if member.status == discord.Status.idle:
        status =':yellow_circle: afk'
    guild = ctx.guild
    await ctx.message.delete()
    author = ctx.message.author
    emb = discord.Embed(title='–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ',colour=discord.colour.Color.red())
    emb.add_field(name='–î–∞—Ç–∞ –∑–∞—Ö–æ–¥–∞ –≤ –≥—Ä—É–ø–ø—É:',value=member.joined_at,inline=False)
    emb.add_field(name='–ò–º—è:',value=member.display_name,inline=False)
    emb.add_field(name='–¢–µ–≥:',value=member.discriminator,inline=False)
    emb.add_field(name='–ê–π–¥–∏:',value=member.id,inline=False)
    emb.add_field(name='–°—Ç–∞—Ç—É—Å:',value=status,inline=False)
    emb.add_field(name='–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞:',value=member.created_at,inline=False)
    emb.add_field(name='–î–∞—Ç–∞ –≤—Ö–æ–¥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:',value=member.joined_at,inline=False)
    if member.id == guild.owner.id:
        emb.add_field(name = '–í –¥–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø–µ:',value='—Å–æ–∑–¥–∞—Ç–µ–ª—å',inline=False)
    else:
        emb.add_field(name = '–í –¥–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø–µ:',value='—É—á–∞—Å—Ç–Ω–∏–∫',inline=False)
    emb.add_field(name = '–í—ã—Å—à–∞—è —Ä–æ–ª—å:',value=member.top_role.mention,inline=False)
    emb.add_field(name = '–í—Å–µ–≥–æ —Ä–æ–ª–µ–π:',value=len(member.roles),inline=False)
    emb.add_field(name = ':robot:–ë–æ—Ç?',value=bot,inline=False)
    emb.set_thumbnail(url=member.avatar_url)
    emb.set_footer(text='–∑–∞–ø—Ä–æ—à–µ–Ω–æ:' + str(author),icon_url=ctx.message.author.avatar_url)
    message = await ctx.send(embed = emb)
    await asyncio.sleep(15)
    await message.delete()
@userinfo.error
async def userinfo_error(ctx,error):
    await ctx.message.delete()
    if isinstance(error,commands.MissingRequiredArgument):
        author = ctx.message.author
        await ctx.send(f'**{author.name}** –≤—ã –Ω–µ –≤–≤–µ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')

@client.event
async def on_message_delete(guild, member):
    channel = client.get_channel( 734043789966049390 )#–ê–π–¥–∏ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ª–æ–≥–æ–≤
    embed = discord.Embed(color=discord.Color.green(), timestamp=datetime.datetime.now(datetime.timezone.utc), description=f'**{member} –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏—è!**')
    embed.set_author(name=member, icon_url=str(member.avatar_url_as(static_format='png', size=2048)))
    embed.set_footer(text=f"Member ID: {member.id}")
    await channel.send(embed=embed)

# Get token
token = open( 'token.txt', 'r' ).readline()
client.run( token )